security:
    role_hierarchy:
        # un membre avec le ROLE_ADMIN aura Ã©galement le ROLE_USER et le ROLE_FREELANCER
        ROLE_ADMIN:  [ROLE_USER, ROLE_FREELANCER]
        # Le ROLE_SUPER_ADMIN avec le ROLE_ALLOWED_TO_SWITCH qui permet de s'authentifier en se faisant passer pour n'importe quel membre.
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            pattern:    ^/
            user_checker: App\Controller\Front\Front\UserChecker # activation du UserChecker
            http_basic: ~
            provider: app_user_provider
            switch_user: ~
            # permet de profiter du ROLE_ALLOWED_TO_SWITCH du super admin

            logout:
                path: /logout
                target: /

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000 #30 jours

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                check_path: login
                login_path: login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: app_front_home


            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/User, roles: ROLE_USER }
        # - { path: ^/back, roles: FREELANCER }
        # - { path: ^/user, roles: ROLE_USER }
        # - { path: ^/profile, roles: ROLE_USER }
